#! /usr/bin/env gforth
\                                           -*- forth -*-

vocabulary dmgforth
vocabulary dmgforth-user

get-current
also dmgforth definitions
constant previous-wid

also dmgforth

require ./src/cli.fs
require ./src/rom.fs
require ./src/sym.fs
require ./src/asm.fs


also gb-assembler-impl
' rom, IS emit
' rom-offset IS offset
' rom! IS emit-to
previous

rom erase

output-file to-symbol-file set-sym-file
s" ; Generated by dmg-forth " sym-write sym-cr sym-cr

include ./src/cartridge.fs

--no-kernel invert [IF]
include ./src/kernel.fs
include ./src/primitives.fs
[THEN]

fpath clear-path
dmgforth-path fpath also-path
fpath path+ ./

require ./src/user.fs

( We want to load the input file sealed in the DMGFORTH-USER
( vocabulary. The problem is that we do not want to populate this
  vocabulary with auxiliary words to load the input-file.

  Instead, we put all the words in this colon-definition to resolve
  the word into addresses before we seal and load the game.
)

: assert-empty-stack
  depth 0<> abort" Stack is not empty" ;

: write-game-and-die
  fix-header-complement
  fix-global-checksum
  output-file dump-rom
  bye ;

:noname
  assert-empty-stack

  dmgforth-user definitions
  seal also
  $0150 ==>

  --no-kernel invert if
    __start:
    main jp,
  then

  input-file included

  assert-empty-stack
  write-game-and-die

; execute

( Do not write any code after this! )
